//Print the Longest Subarray whose Bitwise AND is maximum

// Brute Force
//TC: O(n^3)
//SC: O(N) (Auxilary space)
#include<bits/stdc++.h>
using namespace std;
void LongestSubarray(vector<int>&arr,int n)
{
    int temp=INT_MIN;
    vector<int>ans;
    for(int i=0;i<n;i++)
    {
        int andVAlue=INT_MIN;
        int len=0;
        for(int j=i;j<n;j++)
        {
            len++;
            if(andVAlue==INT_MIN)
            {
                andVAlue=arr[j];
            }
            else{
                andVAlue=andVAlue&arr[j];
            }
            if(andVAlue>temp)
            {
                temp=andVAlue;
                ans.clear();
                for(int k=i;k<=j;k++)
                {
                    ans.push_back(arr[k]);
                }
            }
            if(andVAlue==temp && len>ans.size())
            {
                temp=andVAlue;
                ans.clear();
                for(int k=i;k<=j;k++)
                {
                    ans.push_back(arr[k]);
                }
            }
        }
    }
    for(int i=0;i<ans.size();i++)
    {
        cout<<ans[i]<<" ";
    }
  cout<<endl;
}
int main()
{
    vector<int>arr={1,5,5,2,2,2,4,7,7,7,7};
    int n=arr.size();
    LongestSubarray(arr,n);
    return 0;
}
//output
// 7 7 7 7


